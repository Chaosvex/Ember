/*
 * Copyright (c) 2024 Ember
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

namespace ember.rpc.Character;

enum Status : ubyte {
	UNKNOWN_ERROR,
	OK,
	ILLFORMED_MESSAGE
}

enum Flags : uint { /* todo, investigate */
	NONE                   = 0x000,
	UNKNOWN1               = 0x001,
	UNKNOWN2               = 0x002,
	LOCKED_FOR_TRANSFER    = 0x004,
	UNKNOWN4               = 0x008,
	UNKNOWN5               = 0x010,
	UNKNOWN6               = 0x020,
	UNKNOWN7               = 0x040,
	UNKNOWN8               = 0x080,
	UNKNOWN9               = 0x100,
	UNKNOWN10              = 0x200,
	HIDE_HELM              = 0x400,
	HIDE_CLOAK             = 0x800,
	UNKNOWN13              = 0x1000,
	GHOST                  = 0x2000,
	RENAME                 = 0x4000
}

table CharacterTemplate {
	name:string;
	race:ubyte;
	class_:ubyte;
	gender:ubyte;
	skin:ubyte;
	face:ubyte;
	hairstyle:ubyte;
	haircolour:ubyte;
	facialhair:ubyte;
	outfit_id:ubyte;
}

table Character {
	id:ulong;
	account_id:uint;
	realm_id:uint;
	name:string;
	race:ubyte;
	class_:ubyte;
	gender:ubyte;
	skin:ubyte;
	face:ubyte;
	hairstyle:ubyte;
	haircolour:ubyte;
	facialhair:ubyte;
	level:ubyte;
	zone:uint;
	map:uint;
	x:float;
	y:float;
	z:float;
	orientation:float;
	guild_id:uint;
	guild_rank:uint;
	flags:Flags;
	first_login:ubyte;
	pet_display_id:uint;
	pet_level:uint;
	pet_family:uint;
}

table Retrieve {
	account_id:uint;
	realm_id:uint;
}

table Rename {
	account_id:uint;
	name:string;
	realm_id:uint;
	character_id:ulong;
}

table Delete {
	account_id:uint;
	realm_id:uint;
	character_id:ulong;
}

table Create {
	account_id:uint;
	realm_id:uint;
	character:CharacterTemplate;
}

table CreateResponse {
	status:Status;
	result:uint;
}

table RetrieveResponse {
	status:Status;
	result:uint;
	characters:[Character];
}

table RenameResponse {
	status:Status;
	result:uint;
	name:string;
	character_id:ulong;
}

table DeleteResponse {
	status:Status;
	result:uint;
}

union Message {
	CreateResponse,
	RenameResponse,
	RetrieveResponse,
	DeleteResponse,
	Create,
	Delete,
	Rename,
	Retrieve
}

table Envelope {
	message: Message;
}

root_type Envelope;

rpc_service Character {
	create(Create):CreateResponse;
	delete(Delete):DeleteResponse;
	rename(Rename):RenameResponse;
	enumerate(Retrieve):RetrieveResponse;
}